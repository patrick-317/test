{"ast":null,"code":"// src/api.js\nimport axios from'axios';const API_BASE_URL='http://13.125.8.149:8080';// 실제 API URL로 변경하세요\n// 보험 개발 API 호출 함수\nexport const createInsurance=async insuranceData=>{try{const response=await axios.post(`${API_BASE_URL}/insurance/create`,insuranceData);console.log('Insurance created successfully:',response.data);return response.data;}catch(error){console.error('Failed to create insurance:',error);throw new Error('보험 개발에 실패했습니다. 다시 시도해주세요.');}};// 보험 가입 요청 조회\nexport const getInsuranceRequests=async()=>{try{const response=await axios.get(`${API_BASE_URL}/underwriting/pending`);console.log('Insurance requests retrieved successfully:',response.data);return response.data;}catch(error){console.error('Failed to retrieve insurance requests:',error);throw new Error('보험 가입 요청 조회에 실패했습니다. 다시 시도해주세요.');}};// 보험 가입 승인\nexport const approveInsuranceRequest=async contractId=>{try{const response=await axios.put(`${API_BASE_URL}/underwriting/approve/${contractId}`);console.log('Insurance request approved successfully:',response.data);return response.data;}catch(error){console.error('Failed to approve insurance request:',error);throw new Error('보험 가입 승인이 실패했습니다. 다시 시도해주세요.');}};// 보험 가입 거절\nexport const rejectInsuranceRequest=async requestId=>{try{const response=await axios.put(`${API_BASE_URL}/underwriting/reject/${requestId}`);console.log('Insurance request rejected successfully:',response.data);return response.data;}catch(error){console.error('Failed to reject insurance request:',error);throw new Error('보험 가입 거절이 실패했습니다. 다시 시도해주세요.');}};// 보험금 지급 조회\nexport const getInsurancePayments=async()=>{try{const response=await axios.get(`${API_BASE_URL}/api/payments`);console.log('Insurance payments retrieved successfully:',response.data);return response.data;}catch(error){console.error('Failed to retrieve insurance payments:',error);throw new Error('보험금 지급 조회에 실패했습니다. 다시 시도해주세요.');}};// 보험금 지급 승인\nexport const approveInsurancePayment=async id=>{try{const response=await axios.post(`${API_BASE_URL}/api/payments/approve/${id}`);console.log('Insurance payment approved successfully:',response.data);return response.data;}catch(error){console.error('Failed to approve insurance payment:',error);throw new Error('보험금 지급 승인이 실패했습니다. 다시 시도해주세요.');}};// 보험금 지급 거절\nexport const rejectInsurancePayment=async id=>{try{const response=await axios.post(`${API_BASE_URL}/api/payments/reject/${id}`);console.log('Insurance payment rejected successfully:',response.data);return response.data;}catch(error){console.error('Failed to reject insurance payment:',error);throw new Error('보험금 지급 거절이 실패했습니다. 다시 시도해주세요.');}};","map":{"version":3,"names":["axios","API_BASE_URL","createInsurance","insuranceData","response","post","console","log","data","error","Error","getInsuranceRequests","get","approveInsuranceRequest","contractId","put","rejectInsuranceRequest","requestId","getInsurancePayments","approveInsurancePayment","id","rejectInsurancePayment"],"sources":["/Users/patrick/git/test/front-employee/src/api/api.js"],"sourcesContent":["// src/api.js\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://13.125.8.149:8080'; // 실제 API URL로 변경하세요\n\n// 보험 개발 API 호출 함수\nexport const createInsurance = async (insuranceData) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/insurance/create`, insuranceData);\n    console.log('Insurance created successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to create insurance:', error);\n    throw new Error('보험 개발에 실패했습니다. 다시 시도해주세요.');\n  }\n};\n\n// 보험 가입 요청 조회\nexport const getInsuranceRequests = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/underwriting/pending`);\n    console.log('Insurance requests retrieved successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to retrieve insurance requests:', error);\n    throw new Error('보험 가입 요청 조회에 실패했습니다. 다시 시도해주세요.');\n  }\n};\n\n// 보험 가입 승인\nexport const approveInsuranceRequest = async (contractId) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/underwriting/approve/${contractId}`);\n    console.log('Insurance request approved successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to approve insurance request:', error);\n    throw new Error('보험 가입 승인이 실패했습니다. 다시 시도해주세요.');\n  }\n};\n\n// 보험 가입 거절\nexport const rejectInsuranceRequest = async (requestId) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/underwriting/reject/${requestId}`);\n    console.log('Insurance request rejected successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to reject insurance request:', error);\n    throw new Error('보험 가입 거절이 실패했습니다. 다시 시도해주세요.');\n  }\n};\n\n// 보험금 지급 조회\nexport const getInsurancePayments = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/api/payments`);\n    console.log('Insurance payments retrieved successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to retrieve insurance payments:', error);\n    throw new Error('보험금 지급 조회에 실패했습니다. 다시 시도해주세요.');\n  }\n};\n\n// 보험금 지급 승인\nexport const approveInsurancePayment = async (id) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/payments/approve/${id}`);\n    console.log('Insurance payment approved successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to approve insurance payment:', error);\n    throw new Error('보험금 지급 승인이 실패했습니다. 다시 시도해주세요.');\n  }\n};\n\n// 보험금 지급 거절\nexport const rejectInsurancePayment = async (id) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/payments/reject/${id}`);\n    console.log('Insurance payment rejected successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Failed to reject insurance payment:', error);\n    throw new Error('보험금 지급 거절이 실패했습니다. 다시 시도해주세요.');\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}