{"ast":null,"code":"// src/api.js\nimport axios from'axios';const API_BASE_URL='http://13.125.8.149:8080';// 실제 API URL로 변경하세요\n// 로그인 요청\nexport const login=async(email,password)=>{try{const response=await axios.post(`${API_BASE_URL}/login/main`,{email,password});const success=response.data;console.log(success);return success;}catch(error){console.error('Login failed:',error);return null;}};// 보험 가입 요청\nexport const subscribe=async formData=>{try{const response=await axios.post(`${API_BASE_URL}/contracts/apply`,formData,{headers:{'Content-Type':'application/json'}});console.log('Subscription successful:',response.data);return response.data;}catch(error){var _error$response;console.error('Subscription failed:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);alert('Subscription failed. Please try again.');return null;}};export const fetchInsuranceDetails=async requestBody=>{try{const response=await axios.post(`${API_BASE_URL}/contracts/insurance`,requestBody,{headers:{'Content-Type':'application/json'}});console.log('Fetched insurance details:',response.data);return response.data;}catch(error){var _error$response2;console.error('Error fetching insurance details:',((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message);throw error;}};// 보험금 지급 요청\nexport const requestPayout=async(customerId,insuranceId)=>{try{const response=await axios.post(`${API_BASE_URL}/api/payments/request`,{customerId,insuranceId});console.log('Payout request successful:',response.data);return response.data;// JSON 데이터 반환\n}catch(error){var _error$response3,_error$response4;console.error('Payout request failed:',((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||error.message);throw((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.data)||new Error('Unexpected error occurred.');}};// **여기서부터 새로운 함수 추가**\n// 계약 목록 조회\nexport const fetchContracts=async()=>{try{const response=await axios.get(`${API_BASE_URL}/requestInvestment/contracts`);console.log('Contracts fetched:',response.data);return response.data;}catch(error){console.error('Error fetching contracts:',error);throw error;}};// 사고 조사 요청\nexport const requestAccidentInvestigation=async contractId=>{try{const response=await axios.post(`${API_BASE_URL}/requestInvestment/contracts/${contractId}/request`);console.log('Accident investigation requested:',response.data);return response.data;// 서버로부터의 메시지 반환\n}catch(error){console.error('Error requesting accident investigation:',error);throw error;}};","map":{"version":3,"names":["axios","API_BASE_URL","login","email","password","response","post","success","data","console","log","error","subscribe","formData","headers","_error$response","message","alert","fetchInsuranceDetails","requestBody","_error$response2","requestPayout","customerId","insuranceId","_error$response3","_error$response4","Error","fetchContracts","get","requestAccidentInvestigation","contractId"],"sources":["/Users/patrick/git/test/front-customer/src/services/api.js"],"sourcesContent":["// src/api.js\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://13.125.8.149:8080'; // 실제 API URL로 변경하세요\n\n// 로그인 요청\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login/main`, {\n      email,\n      password,\n    });\n    const success = response.data;\n    console.log(success);\n    return success;\n  } catch (error) {\n    console.error('Login failed:', error);\n    return null;\n  }\n};\n\n// 보험 가입 요청\nexport const subscribe = async (formData) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/contracts/apply`, formData, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    console.log('Subscription successful:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Subscription failed:', error.response?.data || error.message);\n    alert('Subscription failed. Please try again.');\n    return null;\n  }\n};\n\nexport const fetchInsuranceDetails = async (requestBody) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/contracts/insurance`,\n      requestBody,\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n    console.log('Fetched insurance details:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching insurance details:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// 보험금 지급 요청\nexport const requestPayout = async (customerId, insuranceId) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/payments/request`, {\n      customerId,\n      insuranceId,\n    });\n\n    console.log('Payout request successful:', response.data);\n    return response.data; // JSON 데이터 반환\n  } catch (error) {\n    console.error('Payout request failed:', error.response?.data || error.message);\n    throw error.response?.data || new Error('Unexpected error occurred.');\n  }\n};\n\n// **여기서부터 새로운 함수 추가**\n\n// 계약 목록 조회\nexport const fetchContracts = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/requestInvestment/contracts`);\n    console.log('Contracts fetched:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching contracts:', error);\n    throw error;\n  }\n};\n\n// 사고 조사 요청\nexport const requestAccidentInvestigation = async (contractId) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/requestInvestment/contracts/${contractId}/request`\n    );\n    console.log('Accident investigation requested:', response.data);\n    return response.data; // 서버로부터의 메시지 반환\n  } catch (error) {\n    console.error('Error requesting accident investigation:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}