{"ast":null,"code":"// src/api.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://15.164.100.47:8080'; // 실제 API URL로 변경하세요\n\n// 로그인 요청\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login/main`, {\n      email,\n      password\n    });\n    const {\n      token\n    } = response.data;\n    console.log('Login successful:', token);\n    return token;\n  } catch (error) {\n    console.error('Login failed:', error);\n    return null;\n  }\n};\n\n// 보험 가입 요청\nexport const subscribe = async formData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/contracts/apply`, formData, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Subscription successful:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Subscription failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    alert('Subscription failed. Please try again.');\n    return null;\n  }\n};\nexport const fetchInsuranceDetails = async requestBody => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/contracts/insurance`, requestBody, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Fetched insurance details:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('Error fetching insurance details:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\n\n// 보험금 지급 요청\nexport const requestPayout = async (customerId, insuranceId) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/payments/request`, {\n      customerId,\n      insuranceId\n    });\n    console.log('Payout request successful:', response.data);\n    return response.data; // JSON 데이터 반환\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error('Payout request failed:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || new Error('Unexpected error occurred.');\n  }\n};\n\n// **여기서부터 새로운 함수 추가**\n\n// 계약 목록 조회\nexport const fetchContracts = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/requestInvestment/contracts`);\n    console.log('Contracts fetched:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching contracts:', error);\n    throw error;\n  }\n};\n\n// 사고 조사 요청\nexport const requestAccidentInvestigation = async contractId => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/requestInvestment/contracts/${contractId}/request`);\n    console.log('Accident investigation requested:', response.data);\n    return response.data; // 서버로부터의 메시지 반환\n  } catch (error) {\n    console.error('Error requesting accident investigation:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","login","email","password","response","post","token","data","console","log","error","subscribe","formData","headers","_error$response","message","alert","fetchInsuranceDetails","requestBody","_error$response2","requestPayout","customerId","insuranceId","_error$response3","_error$response4","Error","fetchContracts","get","requestAccidentInvestigation","contractId"],"sources":["/Users/patrick/git/Insurance_system/front-customer/src/services/api.js"],"sourcesContent":["// src/api.js\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://15.164.100.47:8080'; // 실제 API URL로 변경하세요\n\n// 로그인 요청\nexport const login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/login/main`, {\n      email,\n      password,\n    });\n    const { token } = response.data;\n    console.log('Login successful:', token);\n    return token;\n  } catch (error) {\n    console.error('Login failed:', error);\n    return null;\n  }\n};\n\n// 보험 가입 요청\nexport const subscribe = async (formData) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/contracts/apply`, formData, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    console.log('Subscription successful:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Subscription failed:', error.response?.data || error.message);\n    alert('Subscription failed. Please try again.');\n    return null;\n  }\n};\n\nexport const fetchInsuranceDetails = async (requestBody) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/contracts/insurance`,\n      requestBody,\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n    console.log('Fetched insurance details:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching insurance details:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// 보험금 지급 요청\nexport const requestPayout = async (customerId, insuranceId) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/payments/request`, {\n      customerId,\n      insuranceId,\n    });\n\n    console.log('Payout request successful:', response.data);\n    return response.data; // JSON 데이터 반환\n  } catch (error) {\n    console.error('Payout request failed:', error.response?.data || error.message);\n    throw error.response?.data || new Error('Unexpected error occurred.');\n  }\n};\n\n// **여기서부터 새로운 함수 추가**\n\n// 계약 목록 조회\nexport const fetchContracts = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/requestInvestment/contracts`);\n    console.log('Contracts fetched:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching contracts:', error);\n    throw error;\n  }\n};\n\n// 사고 조사 요청\nexport const requestAccidentInvestigation = async (contractId) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/requestInvestment/contracts/${contractId}/request`\n    );\n    console.log('Accident investigation requested:', response.data);\n    return response.data; // 서버로부터의 메시지 반환\n  } catch (error) {\n    console.error('Error requesting accident investigation:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,YAAY,aAAa,EAAE;MAC9DE,KAAK;MACLC;IACF,CAAC,CAAC;IACF,MAAM;MAAEG;IAAM,CAAC,GAAGF,QAAQ,CAACG,IAAI;IAC/BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,KAAK,CAAC;IACvC,OAAOA,KAAK;EACd,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,YAAY,kBAAkB,EAAEY,QAAQ,EAAE;MAC7EC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFL,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,QAAQ,CAACG,IAAI,CAAC;IACtD,OAAOH,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IAAA,IAAAI,eAAA;IACdN,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAE,EAAAI,eAAA,GAAAJ,KAAK,CAACN,QAAQ,cAAAU,eAAA,uBAAdA,eAAA,CAAgBP,IAAI,KAAIG,KAAK,CAACK,OAAO,CAAC;IAC5EC,KAAK,CAAC,wCAAwC,CAAC;IAC/C,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,WAAW,IAAK;EAC1D,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/B,GAAGL,YAAY,sBAAsB,EACrCkB,WAAW,EACX;MACEL,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACDL,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,QAAQ,CAACG,IAAI,CAAC;IACxD,OAAOH,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IAAA,IAAAS,gBAAA;IACdX,OAAO,CAACE,KAAK,CAAC,mCAAmC,EAAE,EAAAS,gBAAA,GAAAT,KAAK,CAACN,QAAQ,cAAAe,gBAAA,uBAAdA,gBAAA,CAAgBZ,IAAI,KAAIG,KAAK,CAACK,OAAO,CAAC;IACzF,MAAML,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,aAAa,GAAG,MAAAA,CAAOC,UAAU,EAAEC,WAAW,KAAK;EAC9D,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,YAAY,uBAAuB,EAAE;MACxEqB,UAAU;MACVC;IACF,CAAC,CAAC;IAEFd,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,QAAQ,CAACG,IAAI,CAAC;IACxD,OAAOH,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;IAAA,IAAAa,gBAAA,EAAAC,gBAAA;IACdhB,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAE,EAAAa,gBAAA,GAAAb,KAAK,CAACN,QAAQ,cAAAmB,gBAAA,uBAAdA,gBAAA,CAAgBhB,IAAI,KAAIG,KAAK,CAACK,OAAO,CAAC;IAC9E,MAAM,EAAAS,gBAAA,GAAAd,KAAK,CAACN,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBjB,IAAI,KAAI,IAAIkB,KAAK,CAAC,4BAA4B,CAAC;EACvE;AACF,CAAC;;AAED;;AAEA;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMtB,QAAQ,GAAG,MAAML,KAAK,CAAC4B,GAAG,CAAC,GAAG3B,YAAY,8BAA8B,CAAC;IAC/EQ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,QAAQ,CAACG,IAAI,CAAC;IAChD,OAAOH,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMkB,4BAA4B,GAAG,MAAOC,UAAU,IAAK;EAChE,IAAI;IACF,MAAMzB,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/B,GAAGL,YAAY,gCAAgC6B,UAAU,UAC3D,CAAC;IACDrB,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEL,QAAQ,CAACG,IAAI,CAAC;IAC/D,OAAOH,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAChE,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}